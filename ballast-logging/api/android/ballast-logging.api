public final class com/copperleaf/ballast/core/AndroidLogger : com/copperleaf/ballast/BallastLogger {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun debug (Ljava/lang/String;)V
	public fun error (Ljava/lang/Throwable;)V
	public fun info (Ljava/lang/String;)V
}

public final class com/copperleaf/ballast/core/BallastLoggingException : java/lang/RuntimeException {
	public fun <init> (Ljava/lang/Throwable;ZLjava/lang/Object;Ljava/util/List;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHandled ()Z
	public final fun getInputSequence ()Ljava/util/List;
	public final fun getLatestState ()Ljava/lang/Object;
	public final fun get_cause ()Ljava/lang/Throwable;
	public fun hashCode ()I
}

public final class com/copperleaf/ballast/core/LoggingInterceptor : com/copperleaf/ballast/BallastInterceptor {
	public fun <init> ()V
	public fun <init> (ZZZ)V
	public synthetic fun <init> (ZZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getKey ()Lcom/copperleaf/ballast/BallastInterceptor$Key;
	public fun start (Lcom/copperleaf/ballast/BallastInterceptorScope;Lkotlinx/coroutines/flow/Flow;)V
}

public final class com/copperleaf/ballast/core/LoggingUtilsKt {
	public static final fun formatMessage (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
}

public final class com/copperleaf/ballast/core/PrintlnLogger : com/copperleaf/ballast/BallastLogger {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun debug (Ljava/lang/String;)V
	public fun error (Ljava/lang/Throwable;)V
	public fun info (Ljava/lang/String;)V
}

public final class com/copperleaf/ballast/logging/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

