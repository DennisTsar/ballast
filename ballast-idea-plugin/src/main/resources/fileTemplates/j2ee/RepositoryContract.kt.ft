#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != "")package ${PACKAGE_NAME}
#end

import com.copperleaf.ballast.repository.cache.Cached

#parse("File Header.java")
${classVisibility}object ${featureName}RepositoryContract {
    ${classVisibility}data class State(
        ${propertyVisibility}val initialized: Boolean = false,

        ${propertyVisibility}val dataListInitialized: Boolean = false,
        ${propertyVisibility}val dataList: Cached<List<String>> = Cached.NotLoaded(),
    )

    ${classVisibility}sealed interface Inputs {
        ${propertyVisibility}${dataObjectModifier}object ClearCaches : Inputs
        ${propertyVisibility}${dataObjectModifier}object Initialize : Inputs
        ${propertyVisibility}${dataObjectModifier}object RefreshAllCaches : Inputs

        ${propertyVisibility}data class RefreshDataList(val forceRefresh: Boolean) : Inputs
        ${propertyVisibility}data class DataListUpdated(val dataList: Cached<List<String>>) : Inputs
    }
}
